
@if (PageStatus != null)
{
    <div class="e pagination">
        @if (PageStatus.PageCount > 1)
        {
                
            <div class="e pagination item"><a @onclick="@(() => OnPageClicked.InvokeAsync(1))" class="btn">&laquo;</a></div>
            @for (var i = _startIndex; i <= _finishIndex; i++)
            {
                var currentIndex = i;
                @if (i == PageStatus.CurrentPage)
                {
                    <div class="e pagination item active"><span class="btn">@i</span></div>
                }
                else
                {
                    <div class="e pagination item"><a @onclick="@(() => OnPageClicked.InvokeAsync(currentIndex))" class="btn">@i</a></div>
                }
            }
            <div class="e pagination item"><a @onclick="@(() => OnPageClicked.InvokeAsync(PageStatus.PageCount))" class="btn">&raquo;</a></div>
                
        }
    </div>
}

@code {
    [Parameter]
    public PageStatus PageStatus { get; set; }

    [Parameter]
    public EventCallback<int> OnPageClicked { get; set; }

    private int _startIndex;
    private int _finishIndex;

    protected override void OnParametersSet()
    {
        base.OnParametersSet();
        _startIndex = Math.Max(PageStatus.CurrentPage - 5, 1);
        _finishIndex = Math.Min(PageStatus.CurrentPage + 5, PageStatus.PageCount);

    }

}
