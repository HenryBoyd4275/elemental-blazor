// Copyright (c) 2020 Apption Corporation
// 
// This Source Code Form is subject to the terms of the Mozilla Public
// License, v. 2.0. If a copy of the MPL was not distributed with this
// file, You can obtain one at http://mozilla.org/MPL/2.0/.

@using System.Timers; 

<div class="e searchbar">
    <i class="fa fa-search"></i>
    <input type="text" @bind-value="_inputValue" @bind-value:event="oninput" @onkeyup="HandleKeyUp" placeholder="@Placeholder"/>
    <div class="@_clearIconCss" @onclick="ClearSearch">
        <i class="fa fa-times"></i>
    </div>
</div>

@code {
    [Parameter]
    public string Placeholder { get; set; } = "Search...";
    [Parameter]
    public Action<string> OnInputChange { get; set; }
    [Parameter]
    public int EventTimer { get; set; } = 500;

    private string _clearIconCss => $"e clear-search {(_inputValue?.Length > 0 ? "visible" : "")}";
    private string _inputValue = "";
    private Timer inputTimer;

    protected override void OnInitialized()
    {
        inputTimer = new Timer(EventTimer);
        inputTimer.Elapsed += OnTimerFire;
        inputTimer.AutoReset = false;
    }

    private void HandleKeyUp(KeyboardEventArgs e)
    {
        inputTimer.Stop();
        inputTimer.Start();
    }

    private void ClearSearch()
    {
        _inputValue = "";
        OnTimerFire(null, null);
    }

    private void OnTimerFire(Object source, ElapsedEventArgs e)
    {
        Console.WriteLine("timer fired");
        InvokeAsync(() =>
        {
            OnInputChange?.Invoke(_inputValue);
        });
    }
}
